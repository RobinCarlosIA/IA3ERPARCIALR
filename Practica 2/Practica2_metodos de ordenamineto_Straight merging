# Ordenamiento por Mezcla Directa (Straight Merging)
# Este método divide la lista en partes más pequeñas, las ordena y luego las combina en una lista ordenada.

def straight_merging(lista):
    # Caso base: si la lista tiene 1 o 0 elementos, ya está ordenada
    if len(lista) <= 1:
        return lista

    # Dividimos la lista en dos mitades
    mitad = len(lista) // 2
    izquierda = lista[:mitad]  # Primera mitad
    derecha = lista[mitad:]    # Segunda mitad

    # Ordenamos cada mitad de manera recursiva
    print(f"Dividiendo: Izquierda={izquierda}, Derecha={derecha}")
    izquierda_ordenada = straight_merging(izquierda)
    derecha_ordenada = straight_merging(derecha)

    # Mezclamos ambas mitades ordenadas
    lista_ordenada = mezclar(izquierda_ordenada, derecha_ordenada)
    print(f"Mezclando: {lista_ordenada}")
    return lista_ordenada

def mezclar(izquierda, derecha):
    # Esta función combina dos listas ordenadas en una sola lista ordenada
    resultado = []  # Lista vacía donde se guardarán los elementos mezclados
    i, j = 0, 0  # Punteros para recorrer las listas izquierda y derecha

    # Comparar elementos de ambas listas y agregar el menor al resultado
    while i < len(izquierda) and j < len(derecha):
        if izquierda[i] < derecha[j]:
            resultado.append(izquierda[i])
            i += 1
        else:
            resultado.append(derecha[j])
            j += 1

    # Agregar los elementos restantes de la lista izquierda (si quedan)
    while i < len(izquierda):
        resultado.append(izquierda[i])
        i += 1

    # Agregar los elementos restantes de la lista derecha (si quedan)
    while j < len(derecha):
        resultado.append(derecha[j])
        j += 1

    return resultado

# Ejemplo de uso
mi_lista = [38, 27, 43, 3, 9, 82, 10]
print("Lista original:", mi_lista)

# Ordenamos la lista usando Straight Merging
print("\nIniciando el ordenamiento por Mezcla Directa...\n")
lista_ordenada = straight_merging(mi_lista)
print("\nLista ordenada:", lista_ordenada)
